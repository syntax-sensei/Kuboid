-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.analytics_common_issues (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  site_id text NOT NULL,
  query text NOT NULL,
  count integer NOT NULL DEFAULT 0,
  trend text NOT NULL DEFAULT 'neutral'::text CHECK (trend = ANY (ARRAY['up'::text, 'down'::text, 'neutral'::text])),
  captured_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  metadata jsonb,
  user_id uuid,
  CONSTRAINT analytics_common_issues_pkey PRIMARY KEY (id),
  CONSTRAINT analytics_common_issues_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.analytics_summary (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  site_id text NOT NULL,
  total_queries integer NOT NULL DEFAULT 0,
  unique_users integer NOT NULL DEFAULT 0,
  avg_satisfaction numeric NOT NULL DEFAULT 0,
  knowledge_gaps integer NOT NULL DEFAULT 0,
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  avg_response_time_ms numeric,
  top_issue text,
  user_id uuid,
  CONSTRAINT analytics_summary_pkey PRIMARY KEY (id),
  CONSTRAINT analytics_summary_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.analytics_top_queries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  site_id text NOT NULL,
  topic text NOT NULL,
  value integer NOT NULL DEFAULT 0,
  captured_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT analytics_top_queries_pkey PRIMARY KEY (id)
);
CREATE TABLE public.analytics_weekly_trend (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  site_id text NOT NULL,
  day date NOT NULL,
  value integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT analytics_weekly_trend_pkey PRIMARY KEY (id)
);
CREATE TABLE public.chat_feedback (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversation_id uuid NOT NULL,
  turn_id uuid NOT NULL,
  site_id text NOT NULL,
  sentiment text NOT NULL CHECK (sentiment = ANY (ARRAY['positive'::text, 'neutral'::text, 'negative'::text])),
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT chat_feedback_pkey PRIMARY KEY (id),
  CONSTRAINT chat_feedback_turn_id_fkey FOREIGN KEY (turn_id) REFERENCES public.chat_turns(id)
);
CREATE TABLE public.chat_turns (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversation_id uuid NOT NULL,
  site_id text NOT NULL,
  occurred_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  user_message text NOT NULL,
  assistant_message text,
  status text NOT NULL DEFAULT 'resolved'::text CHECK (status = ANY (ARRAY['resolved'::text, 'gap'::text, 'escalated'::text, 'deflected'::text])),
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  user_id uuid,
  CONSTRAINT chat_turns_pkey PRIMARY KEY (id),
  CONSTRAINT chat_turns_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.documents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  file_path text NOT NULL,
  file_name text NOT NULL,
  user_id uuid NOT NULL,
  chunks_count integer DEFAULT 0,
  text_length integer DEFAULT 0,
  processed_at timestamp with time zone DEFAULT now(),
  status text DEFAULT 'processing'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  site_id text,
  CONSTRAINT documents_pkey PRIMARY KEY (id),
  CONSTRAINT documents_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT documents_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.sites(id)
);
CREATE TABLE public.knowledge_gaps (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  site_id text NOT NULL,
  topic text NOT NULL,
  gap_rate numeric NOT NULL DEFAULT 0,
  why text,
  missing jsonb NOT NULL DEFAULT '[]'::jsonb,
  recent_attempts integer NOT NULL DEFAULT 0,
  status text NOT NULL DEFAULT 'open'::text CHECK (status = ANY (ARRAY['open'::text, 'in_progress'::text, 'resolved'::text, 'ignored'::text])),
  last_seen timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  user_id uuid,
  CONSTRAINT knowledge_gaps_pkey PRIMARY KEY (id),
  CONSTRAINT knowledge_gaps_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.sites (
  id text NOT NULL,
  user_id uuid NOT NULL,
  name text NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT sites_pkey PRIMARY KEY (id),
  CONSTRAINT sites_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.url_ingestion_activity (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  url text NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['processing'::text, 'success'::text, 'error'::text])),
  chunks_created integer,
  error text,
  started_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  completed_at timestamp with time zone,
  metadata jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT url_ingestion_activity_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_collections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  collection_name text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_collections_pkey PRIMARY KEY (id),
  CONSTRAINT user_collections_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
